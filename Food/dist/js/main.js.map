{"version":3,"file":"main.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,mCAAmC,UAAU,MAAM,SAAS;AAC5D,0DAA0D,WAAW;AACrE,wDAAwD,WAAW;AACnE;AACA;AACA;AACA,kEAAkE,WAAW;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,IAAI,YAAY,WAAW;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kCAAkC;AAClE;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sBAAsB;AACtB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;;;;;;;;;;ACzcAAc;AACd;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,sCAAsC,MAAM;AAC5C,oCAAoC,gBAAgB;AACpD;AACA;AACA,yCAAyC,MAAM;AAC/C;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW;AACrD,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;;;;;;;;;;ACpOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UC5DA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBa;AACb;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,qDAAgB;AACzC,kBAAkB,mBAAO,CAAC,uDAAiB;AAC3C,mBAAmB,mBAAO,CAAC,yDAAkB;AAC7C,kBAAkB,mBAAO,CAAC,uDAAiB;AAC3C,kBAAkB,mBAAO,CAAC,uDAAiB;AAC3C,uBAAuB,mBAAO,CAAC,iEAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","sources":["webpack://docs/./Food/src/js/modules/calculator.js","webpack://docs/./Food/src/js/modules/cards.js","webpack://docs/./Food/src/js/modules/modal.js","webpack://docs/./Food/src/js/modules/slider.js","webpack://docs/./Food/src/js/modules/tabs.js","webpack://docs/./Food/src/js/modules/timer.js","webpack://docs/webpack/bootstrap","webpack://docs/./Food/src/js/main.js"],"sourcesContent":["function calculator() {\r\n    //калькулятор\r\n    const result = document.querySelector(\".calculating__result span\");\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', sex);\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', ratio);\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '____';\r\n            return;\r\n        }\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n\r\n                elements.forEach(elem => elem.classList.remove(activeClass));\r\n\r\n                e.target.classList.add(activeClass);\r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener(\"input\", () => {\r\n\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.outline = \"1px solid red\";\r\n            } else {\r\n                input.style.outline = \"none\";\r\n            }\r\n\r\n            switch (input.getAttribute(\"id\")) {\r\n                case \"height\": height = +input.value;\r\n                    break;\r\n                case \"weight\": weight = +input.value;\r\n                    break;\r\n                case \"age\": age = +input.value;\r\n                    break;\r\n            }\r\n            calcTotal();\r\n        });\r\n    }\r\n    getDynamicInformation(\"#height\");\r\n    getDynamicInformation(\"#weight\");\r\n    getDynamicInformation(\"#age\");\r\n}\r\n\r\nmodule.exports = calculator;","function cards() {\r\n        //создаем продуктовые карточки с помощью классов\r\n\r\n        class MenuCard {\r\n            //используем rest оператор ...classes для того, чтобы предусмотреть возможность расширения карточки\r\n            constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n                this.src = src;\r\n                this.alt = alt;\r\n                this.title = title;\r\n                this.descr = descr;\r\n                this.price = price;\r\n                //this.classes это будет массив\r\n                this.classes = classes;\r\n                //получаем родительский элемент, куда будут помещаться наши карточки\r\n                this.parent = document.querySelector(parentSelector);\r\n                //зададим курс валют\r\n                this.transfer = 60;\r\n                //вызываем метод конвертации валют и обновляем свойство price\r\n                this.changeToUAH();\r\n            }\r\n            //создаем метод конвертации валют\r\n            changeToUAH() {\r\n                this.price = this.price * this.transfer;\r\n            }\r\n            //создаем метод вертски продуктовой карточки\r\n            render() {\r\n                const element = document.createElement('div');\r\n                //создаем защиту от пустого массива в результате работы rest оператора\r\n                if (this.classes.length == 0) {\r\n                    this.element = 'menu__item';\r\n                    //помещаем класс в наш div\r\n                    element.classList.add(this.element);\r\n                } else {\r\n                    this.classes.forEach(className => element.classList.add(className));\r\n                    element.innerHTML = `\r\n                        <img src=${this.src} alt=${this.alt}>\r\n                        <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                        <div class=\"menu__item-descr\">${this.descr}</div>\r\n                        <div class=\"menu__item-divider\"></div>\r\n                        <div class=\"menu__item-price\">\r\n                            <div class=\"menu__item-cost\">Цена:</div>\r\n                            <div class=\"menu__item-total\"><span>${this.price}</span> руб/день</div>\r\n                        </div>`;\r\n                }\r\n    \r\n                //помещаем созданный элемент на страницу\r\n                this.parent.append(element);\r\n            }\r\n        }\r\n    \r\n        //создаем функцию получения данных с сервера для внесения в карточки\r\n        const getResource = async (url) => {\r\n    \r\n            //В данном случае настройки метода, заголовки и тело не нужно, т.к. мы ничего не отправляем на сервер\r\n            const res = await fetch(url);\r\n    \r\n            if (!res.ok) {\r\n                throw new Error(`Что то пошло не так c ${url}, статус: ${res.status}`);\r\n            }\r\n    \r\n            return await res.json();\r\n        };\r\n    \r\n        //создаем продуктовые карточки с помощью деструктуризации массива с объектами, который получен с сервера\r\n        getResource(\"http://localhost:3000/menu\")\r\n            .then(data => {\r\n                data.forEach(({ img, altimg, title, descr, price }) => {\r\n                    new MenuCard(img, altimg, title, descr, price, \".menu .container\", \"menu__item\").render();\r\n                });\r\n            });\r\n    \r\n        //создаем экземпляры класса без использования промежуточных переменных\r\n        // new MenuCard(\r\n        //     \"img/tabs/vegy.jpg\",\r\n        //     \"vegy\",\r\n        //     'Меню \"Фитнес\"',\r\n        //     'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',\r\n        //     10,\r\n        //     //таким образом передаем селектор родительского элемента для размещения карточки, поставлены точки т.к. работает querySelector()\r\n        //     \".menu .container\",\r\n        //     //тестируем работу rest оператора и проверяем дополнительные классы у карточки\r\n        //     \"menu__item\",\r\n        //     \"big\"\r\n        // ).render();\r\n    \r\n        // new MenuCard(\r\n        //     \"img/tabs/elite.jpg\",\r\n        //     \"elite\",\r\n        //     'Меню “Премиум”',\r\n        //     'В меню “Премиум” мы используем не только красивый дизайн упаковки, но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!',\r\n        //     15,\r\n        //     \".menu .container\",\r\n        //     \"menu__item\"\r\n        // ).render();\r\n    \r\n        // new MenuCard(\r\n        //     \"img/tabs/post.jpg\",\r\n        //     \"post\",\r\n        //     'Меню \"Постное\"',\r\n        //     'Меню “Постное” - это тщательный подбор ингредиентов: полное отсутствие продуктов животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков за счет тофу и импортных вегетарианских стейков.',\r\n        //     5,\r\n        //     \".menu .container\",\r\n        //     \"menu__item\"\r\n    \r\n        // ).render();\r\n    \r\n    \r\n        //создаем отправку данных из форм на сервер старой технологией\r\n        /* const forms = document.querySelectorAll(\"form\");\r\n    \r\n        const message = {\r\n            loading: \"img/form/spinner.svg\",\r\n            success: \"Спасибо, скоро мы с Вами свяжемся\",\r\n            failure: \"Что-то пошло не так\"\r\n        };\r\n    \r\n        forms.forEach(item => {\r\n            postData(item);\r\n        });\r\n    \r\n        function postData(form) {\r\n            form.addEventListener(\"submit\", (e) => {\r\n                e.preventDefault();\r\n    \r\n                const statusMessage = document.createElement(\"img\");\r\n                statusMessage.src = message.loading;\r\n                statusMessage.style.cssText = `\r\n                    display: block;\r\n                    margin: 0 auto;\r\n                `;\r\n                //form.append(statusMessage);\r\n                //добавляем элемент после формы, чтобы не плыла вёрстка\r\n                form.insertAdjacentElement(\"afterend\", statusMessage);\r\n    \r\n                const request = new XMLHttpRequest();\r\n                request.open(\"POST\", \"server.php\");\r\n                //этот заголовок предназначен для отправки данных из формы на сервер без JSON\r\n                // request.setRequestHeader(\"Content-type\", \"multipart/form-data\");\r\n    \r\n                //этот заголовок для отправки данных в формате JSON\r\n                request.setRequestHeader(\"Content-type\", \"application/json\", \"charset=UTF-8\");\r\n    \r\n                const formData = new FormData(form);\r\n    \r\n                const object = {};\r\n    \r\n                formData.forEach((value, key) => {\r\n                    object[key] = value;\r\n                });\r\n    \r\n                const json = JSON.stringify(object);\r\n    \r\n                request.send(json);\r\n    \r\n                request.addEventListener(\"load\", () => {\r\n                    if (request.status === 200) {\r\n                        console.log(request.response);\r\n                        //statusMessage.textContent = message.success;\r\n                        showThanksModal(message.success); \r\n                        form.reset();\r\n                        setTimeout(() => {\r\n                            statusMessage.remove();\r\n                            closeModal();\r\n                        }, 2000);\r\n    \r\n                    } else {\r\n                        //statusMessage.textContent = message.failure;\r\n                        showThanksModal(message.failure);\r\n                    }\r\n                });\r\n    \r\n            });\r\n        }\r\n    \r\n        //подключаем спиннер при ожидании отправки формы на сервер и выводим окно благодарности\r\n    \r\n        function showThanksModal(message) {\r\n            const prevModalDialog = document.querySelector(\".modal__dialog\");\r\n    \r\n            prevModalDialog.classList.add(\"hide\");\r\n            showModal();\r\n    \r\n            const thanksModal = document.createElement(\"div\");\r\n            thanksModal.classList.add(\"modal__dialog\");\r\n            thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div data-close class=\"modal__close\">&times;</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n            `;\r\n    \r\n            document.querySelector(\".modal\").append(thanksModal);\r\n            setTimeout(() => {\r\n                thanksModal.remove();\r\n                prevModalDialog.classList.add(\"show\");\r\n                prevModalDialog.classList.remove(\"hide\");\r\n                closeModal();\r\n            }, 4000);\r\n        } */\r\n}\r\n\r\nmodule.exports = cards;","function modal() {\r\n    //создаем модальное окно\r\n    const modalTrigger = document.querySelectorAll(\"[data-modal]\"),\r\n        modal = document.querySelector('.modal'),\r\n        //modalCloseBtn = modal.querySelector(\"[data-close]\"),\r\n        modalTimerId = setTimeout(showModal, 50000);\r\n\r\n    function stopInterval() {\r\n        //реализуем функционал отключения таймера, если пользователь сам открыл модальное окно\r\n        clearInterval(modalTimerId);\r\n    }\r\n\r\n    function showModal() {\r\n        modal.classList.add('show', 'fade');\r\n        modal.classList.remove('hide');\r\n        //стиль, который не позволяет использовать прокрутку при открытом модальном окне\r\n        document.body.style.overflow = \"hidden\";\r\n        stopInterval();\r\n    }\r\n\r\n    modalTrigger.forEach(item => {\r\n        item.addEventListener('click', showModal);\r\n    });\r\n\r\n\r\n    function closeModal() {\r\n        modal.classList.add('hide');\r\n        modal.classList.remove('show', 'fade');\r\n        //возвращаем возможность прокрутки страницы при закрытии модального окна\r\n        document.body.style.overflow = \"\";\r\n        stopInterval();\r\n\r\n    }\r\n    //modalCloseBtn.addEventListener('click', closeModal);\r\n\r\n    //реализуем закрытие модального окна при клике на подложку с помощью e.target\r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal || e.target.getAttribute(\"data-close\") == '') {\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    //реализуем возможность закрытия модального окна с помощью клавиши esc\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === 'Escape' && modal.classList.contains('show')) {\r\n            closeModal();\r\n        }\r\n    });\r\n    //реализуем открытие модального окна при прокрутке до конца страницы\r\n    function showModalByScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) {\r\n            showModal();\r\n            //убираем повторное появление модального окна при прокрутке страницы путем удаления обработчика событий\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n    window.addEventListener('scroll', showModalByScroll);\r\n\r\n    //создаем отправку формы на сервер с помощью Promise и fetch\r\n    const forms = document.querySelectorAll(\"form\");\r\n\r\n    const message = {\r\n        loading: \"img/form/spinner.svg\",\r\n        success: \"Спасибо, скоро мы с Вами свяжемся\",\r\n        failure: \"Что-то пошло не так\"\r\n    };\r\n\r\n    forms.forEach(item => {\r\n        BindPostData(item);\r\n    });\r\n\r\n    //выносим отправку данных на сервер в отдельную функцию\r\n\r\n    const postData = async (url, data) => {\r\n        const res = await fetch(url, {\r\n            method: \"POST\",\r\n            body: data,\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        });\r\n\r\n        return await res.json();\r\n    };\r\n\r\n\r\n    function BindPostData(form) {\r\n        form.addEventListener(\"submit\", (e) => {\r\n            e.preventDefault();\r\n\r\n            const statusMessage = document.createElement(\"img\");\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n        display: block;\r\n        margin: 0 auto;\r\n    `;\r\n            //form.append(statusMessage);\r\n            //добавляем элемент после формы, чтобы не плыла вёрстка\r\n            form.insertAdjacentElement(\"afterend\", statusMessage);\r\n\r\n            const formData = new FormData(form);\r\n            //закоментированно для отправки не в формате JSON\r\n            /* const object = {};\r\n        \r\n             formData.forEach((value, key) => {\r\n                 object[key] = value;\r\n             });\r\n        \r\n             const json = JSON.stringify(object); */\r\n\r\n            //Это более старое решение преобразования данных с форм в json\r\n\r\n            // const object = {};\r\n\r\n            // formData.forEach((value, key) => {\r\n            //     object[key] = value;\r\n            // });\r\n\r\n            //современный формат преобразования данных форм в json\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            // fetch(\"server.php\", {\r\n            //     method: \"POST\",\r\n            //     body: JSON.stringify(object),\r\n            //     //для отправки не в формате json\r\n            //     //body: formData,\r\n            //     headers: {\r\n            //         \"Content-type\": \"application/json\"\r\n            //     }\r\n            //     //заголовок не нужен если отправляем не в формате json\r\n            // /*    headers: {\r\n            //         \"Content-type\": \"application/json\"\r\n            //     } */\r\n            // })\r\n\r\n            //используем функцию отправки данных на сервер\r\n\r\n            postData(\"http://localhost:3000/requests\", json)\r\n                .then(data => {\r\n                    console.log(data);\r\n                    showThanksModal(message.success);\r\n                    form.reset();\r\n                    statusMessage.remove();\r\n                }).catch(() => {\r\n                    showThanksModal(message.failure);\r\n                }).finally(() => {\r\n                    form.reset();\r\n                });\r\n        });\r\n    }\r\n\r\n    //подключаем спиннер при ожидании отправки формы на сервер и выводим окно благодарности\r\n\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector(\".modal__dialog\");\r\n\r\n        prevModalDialog.classList.add(\"hide\");\r\n        showModal();\r\n\r\n        const thanksModal = document.createElement(\"div\");\r\n        thanksModal.classList.add(\"modal__dialog\");\r\n        thanksModal.innerHTML = `\r\n<div class=\"modal__content\">\r\n    <div data-close class=\"modal__close\">&times;</div>\r\n    <div class=\"modal__title\">${message}</div>\r\n</div>\r\n`;\r\n\r\n        document.querySelector(\".modal\").append(thanksModal);\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add(\"show\");\r\n            prevModalDialog.classList.remove(\"hide\");\r\n            closeModal();\r\n        }, 4000);\r\n    }\r\n    // Пример работы с json server с помощью fetch()\r\n\r\n    // fetch('http://localhost:3000/menu')\r\n    //     .then(data => data.json())\r\n    //     .then(res => console.log(res));\r\n\r\n}\r\n\r\nmodule.exports = modal;","function slider() {\r\n    //создаем слайдер, вариант 1 (простой)\r\n    //моя реализация слайдера вариант 1 (простой) дополнительно прикрутил автоматическую прокрутку слайдов\r\n    // const prevBtn = document.querySelector(\".offer__slider-prev\"),\r\n    //     nextBtn = document.querySelector(\".offer__slider-next\"),\r\n    //     currentNum = document.querySelector(\"#current\"),\r\n    //     totalNum = document.querySelector(\"#total\"),\r\n    //     slideImg = document.querySelectorAll(\".offer__slide\");\r\n\r\n    // function hideSlides() {\r\n    //     slideImg.forEach(item => {\r\n    //         item.classList.add(\"hide\");\r\n    //         item.classList.remove(\"show\", \"fade\");\r\n    //     });\r\n    // }\r\n\r\n    // function showSlides(i = 0) {\r\n    //     currentNum.innerHTML = `0${i + 1}`;\r\n    //     totalNum.innerHTML = `0${slideImg.length}`;\r\n\r\n    //     if (i > 8) {\r\n    //         currentNum.innerHTML = `${i + 1}`;\r\n    //     }\r\n\r\n    //     if (slideImg.length > 9) {\r\n    //         totalNum.innerHTML = `${slideImg.length}`;\r\n    //     }\r\n\r\n    //     slideImg[i].classList.remove(\"hide\");\r\n    //     slideImg[i].classList.add(\"show\", \"fade\");\r\n    // }\r\n\r\n    // function showAndHide(index) {\r\n    //     hideSlides();\r\n    //     showSlides(index);\r\n    // }\r\n\r\n    // function switchSlides() {\r\n    //     let i = 0;\r\n\r\n    //     const slideInterval = setInterval(() => {\r\n    //         if (i < slideImg.length) {\r\n    //             showAndHide(i);\r\n    //             i++;\r\n    //         } else {\r\n    //             i = 0;\r\n    //             showAndHide(i);\r\n    //         }\r\n    //     }, 3000);\r\n\r\n    //     nextBtn.addEventListener(\"click\", () => {\r\n    //         if (i < slideImg.length - 1) { \r\n    //             i++;\r\n    //             showAndHide(i);\r\n    //         } else {\r\n    //             i = 0;\r\n    //             showAndHide(i);\r\n    //         }\r\n\r\n    //         clearInterval(slideInterval);\r\n    //     });\r\n\r\n    //     prevBtn.addEventListener(\"click\", () => {\r\n    //         if (i === 0 ) {\r\n    //             i = slideImg.length;\r\n    //         }\r\n    //         if (i > 0) {\r\n    //             i--;\r\n    //             showAndHide(i);\r\n    //         }\r\n    //         clearInterval(slideInterval);\r\n    //     });\r\n    // }\r\n\r\n    // showAndHide(0);\r\n    // switchSlides();\r\n\r\n    //создаем сложный слайдер (карусель)\r\n\r\n    let slideIndex = 1;\r\n    let offset = 0;\r\n\r\n    const slides = document.querySelectorAll('.offer__slide'),\r\n        //создаем навигацию для слайдов\r\n        slider = document.querySelector(\".offer__slider\"),\r\n        prev = document.querySelector('.offer__slider-prev'),\r\n        next = document.querySelector('.offer__slider-next'),\r\n        total = document.querySelector('#total'),\r\n        current = document.querySelector('#current'),\r\n        slidesWrapper = document.querySelector(\".offer__slider-wrapper\"),\r\n        slidesField = document.querySelector(\".offer__slider-inner\"),\r\n        width = window.getComputedStyle(slidesWrapper).width;\r\n\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n\r\n    slidesField.style.width = 100 * slides.length + \"%\";\r\n    slidesField.style.display = \"flex\";\r\n    slidesField.style.transition = \"0.5s all\";\r\n\r\n    slidesWrapper.style.overflow = \"hidden\";\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n        slide.addEventListener(\"click\", () => {\r\n            switchNextSlide();\r\n            clearInterval(slidesSwitcher);\r\n        });\r\n    });\r\n\r\n    //обращаемся к блоку слайдера для установления абсолютного позиционирования\r\n    slider.style.position = \"relative\";\r\n\r\n    //создаем точки для навигации слайдера\r\n    const indicators = document.createElement(\"ol\"),\r\n        dots = [];\r\n    indicators.classList.add(\"carousel-indicators\");\r\n\r\n    //помещаем созданный элемент в блок со слайдером\r\n    slider.append(indicators);\r\n\r\n    //создаем количество точек в зависимости от слайдов\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement(\"li\");\r\n        dot.setAttribute(\"data-slide-to\", i + 1);\r\n        dot.classList.add(\"dot\");\r\n\r\n        if (i === 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n    function deleteNotDigits(string) {\r\n        return +string.replace(/\\D/g, '');\r\n    }\r\n\r\n    function switchNextSlide() {\r\n        if (offset == (deleteNotDigits(width) * (slides.length - 1))) {\r\n            offset = 0;\r\n        } else {\r\n            offset += deleteNotDigits(width);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n        dots.forEach(dot => dot.style.opacity = \".5\");\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    }\r\n\r\n    const slidesSwitcher = setInterval(switchNextSlide, 3000);\r\n\r\n    next.addEventListener('click', () => {\r\n        switchNextSlide();\r\n        clearInterval(slidesSwitcher);\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) {\r\n            offset = deleteNotDigits(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= deleteNotDigits(width);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        clearInterval(slidesSwitcher);\r\n\r\n        dots.forEach(dot => dot.style.opacity = \".5\");\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    //создаем взаимодействие с навигацией слайдов\r\n    dots.forEach(dot => {\r\n        dot.addEventListener(\"click\", (e) => {\r\n            const slideTo = e.target.getAttribute(\"data-slide-to\");\r\n\r\n            //устанавливаем позицию текущего слайда, на который кликнули\r\n            slideIndex = slideTo;\r\n            offset = deleteNotDigits(width) * (slideTo - 1);\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            dots.forEach(dot => dot.style.opacity = \".5\");\r\n            dots[slideIndex - 1].style.opacity = 1;\r\n\r\n\r\n            if (slides.length < 10) {\r\n                current.textContent = `0${slideIndex}`;\r\n            } else {\r\n                current.textContent = slideIndex;\r\n            }\r\n\r\n            clearInterval(slidesSwitcher);\r\n        });\r\n    });\r\n}\r\n\r\nmodule.exports = slider;","function tabs() {\r\n    const tabs = document.querySelectorAll('.tabheader__item'),\r\n        tabsContent = document.querySelectorAll('.tabcontent'),\r\n        tabsParent = document.querySelector('.tabheader__items');\r\n    //прячем всё содержимое табов\r\n    function hideTabsContent() {\r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n        tabs.forEach(item => {\r\n            item.classList.remove('tabheader__item_active');\r\n        });\r\n    }\r\n    //реализуем отображение активного контента\r\n    function showTabsContent(i = 0) {\r\n        tabsContent[i].classList.remove('hide');\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabs[i].classList.add('tabheader__item_active');\r\n    }\r\n\r\n    hideTabsContent();\r\n    showTabsContent();\r\n\r\n    tabsParent.addEventListener('click', function (event) {\r\n        const target = event.target;\r\n\r\n        if (target && target.classList.contains('tabheader__item')) {\r\n            //перебираем наши заголовки для того, чтобы определить активный и раскрыть описание таба по индексу заголовка.\r\n            tabs.forEach((item, i) => {\r\n                //идет проверка того, что событие произошло в том же элементе, который перебирается. Далее повторно вызываем функции и передаем в функцию showTabsContent(i) индекс заголовка\r\n                if (item == target) {\r\n                    hideTabsContent();\r\n                    showTabsContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\nmodule.exports = tabs;","function timer() {\r\n    //Создаем timer\r\n    const deadline = '2022-11-11';\r\n\r\n    function getTimeRemaining(endtime) {\r\n        //получаем разницу в миллисекундах между датой окончанчания события и текущей датой и временем\r\n        const t = Date.parse(endtime) - Date.parse(new Date()),\r\n            days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n            //чтобы часы, минуты и секунды не превышали значений 24, 60 и 60, производится деление по остатку на 24 и 60\r\n            hours = Math.floor((t / (1000 * 60 * 60) % 24)),\r\n            minutes = Math.floor((t / 1000 / 60) % 60),\r\n            seconds = Math.floor((t / 1000) % 60);\r\n\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n    //функция помощник, добавляет к таймеру ноль, если число меньше 10, если дата просрочена, то оставляет нули, чтобы не ползла вёрстка\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else if (num >= 0) {\r\n            return num;\r\n        } else {\r\n            return '00';\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n        //получаем элементы со страницы, куда будем передавать информацию\r\n        const timer = document.querySelector(selector),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            //определяем время запуска функции updateClock\r\n            timeInterval = setInterval(updateClock, 1000);\r\n        //убираем мигание в браузере. Мигание появилось в результате того, что setInterval занимает 1 секунду\r\n        updateClock();\r\n\r\n        //создаем функцию, которая будет обновлять наш таймер на странице\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n    setClock('.timer', deadline);\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const tabs = require('./modules/tabs'),\r\n          timer = require('./modules/timer'),\r\n          slider = require('./modules/slider'),\r\n          modal = require('./modules/modal'),\r\n          cards = require('./modules/cards'),\r\n          calculator = require('./modules/calculator');\r\n\r\n    tabs();\r\n    timer();\r\n    slider();\r\n    modal();\r\n    cards();\r\n    calculator();\r\n    \r\n});"],"names":[],"sourceRoot":""}